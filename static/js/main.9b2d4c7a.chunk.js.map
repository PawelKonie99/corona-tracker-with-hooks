{"version":3,"sources":["App.module.css","api/api.js","components/GlobalChart/GlobalChart.js","components/Cards/Cards.js","components/CountryChart/CountryChart.js","components/CountryPicker/CountryPicker.js","components/Header/Header.js","App.js","index.js","components/Cards/Cards.module.css","components/CountryChart/CountryChart.module.css","components/GlobalChart/GlobalChart.module.css","components/CountryPicker/CountryPicker.module.css","components/Header/Header.module.css"],"names":["module","exports","today","Date","toISOString","slice","yestarday","setDate","getDate","fetchData","a","axios","get","data","Global","TotalConfirmed","TotalDeaths","TotalRecovered","modifiedData","confirmed","deaths","recovered","date","console","log","fetchCountries","fetchCountry","country","Confirmed","Deaths","Recovered","countryName","Country","GlobalChart","labels","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","className","styles","container","Cards","confirmedCount","start","duration","end","separator","delay","deathsCount","recoveredCount","cx","singleCart","title","toDateString","CountryChart","countryData","noInfo","label","borderWidth","CountryPicker","handleCountry","useState","allCountries","setAllCountries","getData","useEffect","selectRoll","onChange","e","target","value","map","i","key","Header","App","setData","showGlobalInfo","setShowGlobalInfo","setCountry","setCountryData","fetchAllData","fetchCountryData","swapButton","onClick","globalContainer","countryContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b2d4c7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Lyno\",\"globalContainer\":\"App_globalContainer__3aV7R\",\"countryContainer\":\"App_countryContainer__tYCo1\",\"swapButton\":\"App_swapButton__4ce7b\"};","import axios from 'axios'\r\n\r\nconst url = 'https://api.covid19api.com/summary'\r\nconst countriesUrl = 'https://api.covid19api.com/countries'\r\nconst today = new Date().toISOString().slice(0, 10);\r\nconst yestarday = new Date(new Date().setDate(new Date().getDate() - 1)).toISOString().slice(0, 10)\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const { data: { Date, Global: { TotalConfirmed, TotalDeaths, TotalRecovered } } } = await axios.get(url)\r\n\r\n        const modifiedData = {\r\n            confirmed: TotalConfirmed,\r\n            deaths: TotalDeaths,\r\n            recovered: TotalRecovered,\r\n            date: Date,\r\n        }\r\n\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data } = await axios.get(countriesUrl)\r\n\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountry = async (country) => {\r\n    if (!country) return\r\n    // console.log(country)\r\n    try {\r\n        const { data } = await axios.get(`https://api.covid19api.com/country/${country}?from=${yestarday}T00:00:00Z&to=${today}T00:00:00Z`)\r\n\r\n        const modifiedData = {\r\n            confirmed: data[0].Confirmed,\r\n            deaths: data[0].Deaths,\r\n            recovered: data[0].Recovered,\r\n            countryName: data[0].Country\r\n        }\r\n        // console.log(modifiedData)\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log('Brak Danych')\r\n        // return 'Brak Danych'\r\n    }\r\n}","import React from 'react'\r\nimport { Pie } from 'react-chartjs-2'\r\nimport styles from './GlobalChart.module.css'\r\n\r\nconst GlobalChart = ({ data: { confirmed, deaths, recovered } }) => {\r\n\r\n    const data = {\r\n        labels: ['Zakażeni', 'Zmarli', 'Wyleczeni'],\r\n        datasets: [{\r\n            data: [confirmed, deaths, recovered],\r\n            backgroundColor: ['rgb(0, 0, 255, 0.5)', 'rgb(255, 0, 0, 0.5)', 'rgb(0, 255, 0, 0.5)'],\r\n            hoverBackgroundColor: ['rgb(0, 0, 200, 0.8)', 'rgb(200, 0, 0, 0.8)', 'rgb(0, 200, 0, 0.8)'],\r\n            hoverBorderColor: ['rgb(0, 0, 200, 0.8)', 'rgb(200, 0, 0, 0.8)', 'rgb(0, 200, 0, 0.8)'],\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Pie data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalChart","import React from 'react'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, date } }) => {\r\n    if (!confirmed) return '...Loading'\r\n\r\n    const confirmedCount = <CountUp start={0} duration={3} end={confirmed} separator=' ' delay={0.1} />\r\n    const deathsCount = <CountUp start={0} duration={3} end={deaths} separator=' ' delay={0.1} />\r\n    const recoveredCount = <CountUp start={0} duration={3} end={recovered} separator=' ' delay={0.1} />\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={cx(styles.singleCart, styles.confirmed)}>\r\n                <p className={styles.title}>Zakażeni ludzie</p>\r\n                <p className={styles.date}>{new Date(date).toDateString()}</p>\r\n                <h3>\r\n                    {confirmedCount}\r\n                </h3>\r\n            </div>\r\n            <div className={cx(styles.singleCart, styles.recovered)}>\r\n                <p className={styles.title}>Wyleczeni ludzie</p>\r\n                <p className={styles.date}>{new Date(date).toDateString()}</p>\r\n                <h3>\r\n                    {recoveredCount}\r\n                </h3>\r\n            </div>\r\n            <div className={cx(styles.singleCart, styles.deaths)}>\r\n                <p className={styles.title}>Zmarli ludzie</p>\r\n                <p className={styles.date}>{new Date(date).toDateString()}</p>\r\n                <h3>\r\n                    {deathsCount}\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Cards","import React from 'react'\r\nimport { HorizontalBar } from 'react-chartjs-2'\r\nimport styles from './CountryChart.module.css'\r\n\r\nconst CountryChart = ({ countryData }) => {\r\n    if (!countryData) return <div className={styles.noInfo}> Brak danych :( </div>\r\n\r\n    const data = {\r\n        labels: ['Zakażeni ludzie', 'Wyleczeni ludzie', 'Zmarli ludzie'],\r\n        datasets: [\r\n            {\r\n                label: countryData.countryName,\r\n                backgroundColor: ['rgb(0, 0, 255, 0.5)', 'rgb(0, 255, 0, 0.5)', 'rgb(255, 0, 0, 0.5)'],\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: ['rgb(0, 0, 200, 0.8)', 'rgb(0, 200, 0, 0.8)', 'rgb(200, 0, 0, 0.8)'],\r\n                hoverBorderColor: ['rgb(0, 0, 200, 0.8)', 'rgb(0, 200, 0, 0.8)', 'rgb(200, 0, 0, 0.8)'],\r\n                data: [countryData.confirmed, countryData.recovered, countryData.deaths]\r\n            }\r\n        ]\r\n    };\r\n    return (\r\n        <div className={styles.container}>\r\n            <HorizontalBar data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryChart","import React, { useEffect, useState } from 'react'\r\nimport { fetchCountries } from '../../api/api'\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({ handleCountry, country }) => {\r\n    const [allCountries, setAllCountries] = useState([])\r\n    const getData = async () => {\r\n        setAllCountries(await fetchCountries())\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <select className={styles.selectRoll} onChange={(e) => handleCountry(e.target.value)}>\r\n                <option value=''>{country ? country : 'Wybierz kraj'}</option>\r\n                {allCountries.map((country, i) => <option key={i} value={country.Country}>{country.Country}</option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n\r\n","import React from 'react'\r\nimport styles from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.title}>\r\n            <h1>CoronaVirus-tracker</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport { fetchData, fetchCountry } from './api/api'\r\nimport { GlobalChart, Cards, CountryChart, CountryPicker, Header } from './components'\r\nimport styles from './App.module.css'\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState([])\r\n    const [showGlobalInfo, setShowGlobalInfo] = useState(true)\r\n    const [country, setCountry] = useState('')\r\n    const [countryData, setCountryData] = useState([])\r\n\r\n    const fetchAllData = async () => {\r\n        setData(await fetchData())\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllData()\r\n    }, [])\r\n\r\n    const fetchCountryData = async (country) => {\r\n        setCountryData(await fetchCountry(country))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryData(country)\r\n    }, [country])\r\n\r\n    const changeView = () => {\r\n        setShowGlobalInfo(!showGlobalInfo)\r\n    }\r\n\r\n    const handleCountry = (country) => {\r\n        setCountry(country)\r\n        fetchCountry(country)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Header />\r\n            <button className={styles.swapButton} onClick={changeView}>Zmień widok</button>\r\n            {showGlobalInfo ?\r\n                <div className={styles.globalContainer}><Cards data={data} />\r\n                    <GlobalChart data={data} /></div>\r\n                :\r\n                <div className={styles.countryContainer}>\r\n                    <CountryPicker handleCountry={handleCountry} country={country} />\r\n                    <CountryChart countryData={countryData} />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1aHgt\",\"singleCart\":\"Cards_singleCart__2y9qp\",\"title\":\"Cards_title__1BVfW\",\"date\":\"Cards_date__39HTF\",\"confirmed\":\"Cards_confirmed__2o-B5\",\"recovered\":\"Cards_recovered__krNrq\",\"deaths\":\"Cards_deaths__2GXl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryChart_container__27hLc\",\"noInfo\":\"CountryChart_noInfo__3F_Os\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GlobalChart_container__Mk1II\",\"singleCart\":\"GlobalChart_singleCart__3Rf3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectRoll\":\"CountryPicker_selectRoll__1jbJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__2bmCy\"};"],"sourceRoot":""}